Lambda expression is a new feature which is introduced in Java 8.
 A lambda expression is an anonymous function. 
 A function that doesn’t have a name and doesn’t belong to any class.
 The concept of lambda expression was first introduced in LISP programming language.
 
 
 To create a lambda expression, we specify input parameters (if there are any) 
 on the left side of the lambda operator ->,
 and place the expression or block of statements on the right side of lambda operator. 
 For example, the lambda expression (x, y) -> x + y specifies that lambda expression takes two arguments x and y and returns the sum of these.

//Syntax of lambda expression
(parameter_list) -> {function_body}




